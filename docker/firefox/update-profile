#!/usr/bin/env bash

set -e

DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )"
FIREFOX_LOGFILE=/tmp/firefox.log
COMP_FILE=compatibility.ini
CI_UPDATED_OUTPUT=updated

# shellcheck source=../globals
source "$DIR"/../globals

# setup the trap to print logs on error
function _err() {
   print_logfile "$FIREFOX_LOGFILE" "Firefox log output"
}
trap _err ERR

if [ -f "$PROFILE/$COMP_FILE" ]; then
   echo ":: Updating the profile"

   PROFILE_BUILDID=$(grep LastVersion "$PROFILE/$COMP_FILE")
   PROFILE_BUILDID=${PROFILE_BUILDID#*/}
   if [[ ( "$FIREFOX_BUILDID" > "$PROFILE_BUILDID" ) ]]; then
      echo "$PROFILE_BUILDID -> $FIREFOX_BUILDID"
   elif [[ ( "$FIREFOX_BUILDID" < "$PROFILE_BUILDID" ) ]]; then
      [ -n "$GITHUB_WORKFLOW" ] && echo "::set-output name=$CI_UPDATED_OUTPUT::0"

      echo "Profile version is more recent than the installed Firefox version"
      echo "$FIREFOX_BUILDID < $PROFILE_BUILDID"
      exit 1
   else
      [ -n "$GITHUB_WORKFLOW" ] && echo "::set-output name=$CI_UPDATED_OUTPUT::0"

      echo "Profile is already the latest available version $FIREFOX_BUILDID"
      exit 0
   fi
else
   echo ":: Creating a new profile"
fi

# shellcheck source=../xorg-setup
source "$DIR"/../xorg-setup

echo "Launching Firefox"
"$DIR"/../firefox-wrapper -profile "$PROFILE" &> "$FIREFOX_LOGFILE" &
PID=$!

# delay for firefox to start properly
sleep 3

# ensure firefox is still running
if ! kill -0 $PID &> /dev/null; then
   echo "Firefox has quit unexpectedly"
   exit 1
fi

kill $PID
echo "Waiting for Firefox to quit"

COUNTER=0
while kill -0 $PID &> /dev/null; do
   sleep 1
   COUNTER=$(( COUNTER + 1 ))

   if [ "$COUNTER" -gt "$TIMEOUT" ]; then
      echo "Firefox has taken longer than $TIMEOUT seconds to quit, aborting"
      exit 1
   fi
done

[ -n "$GITHUB_WORKFLOW" ] && echo "::set-output name=$CI_UPDATED_OUTPUT::1"

# wait just in case
wait $PID || true
