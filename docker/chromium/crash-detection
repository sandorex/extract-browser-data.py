#!/usr/bin/env bash

set -e

DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )"

# shellcheck source=../globals
source "$DIR"/../globals

# shellcheck source=../python-setup
source "$DIR"/../python-setup

# shellcheck source=../xorg-setup
source "$DIR"/../xorg-setup

copy_profile

# setup the trap to print logs on error
function _err() {
   print_logfile "$CHROMIUM_LOGFILE" "Chromium log output"
}
trap _err ERR

echo ":: Testing Chromium profile crash detection"

echo "Launching Chromium"
chromium-browser --disable-gpu \
                 --no-sandbox \
                 --user-data-dir="$CHROMIUM_USER_DIR" \
                 &> "$CHROMIUM_LOGFILE" &
PID=$!
disown

# delay for chromium to start properly
sleep 2

# ensure chromium is still running
if ! kill -0 $PID &> /dev/null; then
   echo "Chromium has quit unexpectedly"
   exit 1
fi

# kill it without allowing it to quit nicely to emulate a crash
kill -KILL $PID
echo "Killing Chromium"

python3 -m pytest tests/chromium/test_ch_detection.py::test_ch_crashed \
                  --docker -v \
                  --profile="$CHROMIUM_USER_DIR/$CHROMIUM_PROFILE"
