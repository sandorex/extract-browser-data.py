name: CI
on:
  push:
    branches:
      - ci-testing
    paths:
      - '.github/workflows/ci.yml'
      - 'tests/**'
      - 'extract_browser_data/**'
  schedule:
    # every day at 01:00
    - cron: '0 1 * * *'

jobs:
  build:
    runs-on: ${{ matrix.os }}
    name: ${{ matrix.browser }} ${{ matrix.os }} (${{ matrix.tox }})
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, windows-latest, macos-latest ]
        browser: [ firefox, chromium ]
        python: [ 3.7, 3.8 ]

        # for now im gonna specify tox versions manually
        include:
          - os: ubuntu-latest
            linux: true

          - browser: chromium
            package: chromium-browser

          - python: 3.7
            tox: py37
          - python: 3.8
            tox: py38
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python }}
    - name: Install linux dependencies
      if: ${{ matrix.linux }}
      run: sudo apt-get install -qqy --no-install-recommends xvfb x11-utils wmctrl xdotool fluxbox ${{ matrix.package }}
    - name: Install tox
      run: python -m pip install tox
    - name: Test with tox
      run: tox -e ${{ matrix.tox }} -- -m ${{ matrix.browser }}

  # firefox-schema-tests:
  #   runs-on: ubuntu-latest
  #   name: Firefox Schema Tests
  #   steps:
  #     - uses: actions/checkout@v2
  #     - run: |
  #         id
  #         ls -alh
  #     - run: docker-compose run test-ci -e py37 -- -v tests/firefox/test_ff_schema.py
  #     - uses: actions/upload-artifact@v1
  #       if: failure()
  #       with:
  #         name: firefox-cache
  #         path: ./.tox


  # chromium-schema-tests:
  #   runs-on: ubuntu-latest
  #   name: Chromium Schema Tests
  #   container:
  #     image: quay.io/sandorex/ebd-test-image:ci-testing
  #     volumes:
  #       - ${{ github.github_workspace }}:/project
  #     options: --user user
  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: Run the test
  #       run: tox -e py37 -- -v tests/chromium/test_ch_schema.py
  #     - uses: actions/upload-artifact@v1
  #       if: failure()
  #       with:
  #         name: chromium-cache
  #         path: ./.tox

  # linux-browser-tests:
  #   runs-on: ubuntu-latest
  #   name: Linux ${{ matrix.browser }} (${{ matrix.python }})
  #   container:
  #     image: quay.io/sandorex/ebd-test-image:ci-testing
  #     volumes:
  #       - ${{ github.github_workspace }}:/project
  #     options: --user user
  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       browser: [ 'firefox', 'chromium' ]
  #       python: [ 'py36', 'py37', 'py38' ]
  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: Run the test
  #       run: tox -e ${{ matrix.python }} -- -m '${{ matrix.browser }}'

  # linux-general-tests:
  #   runs-on: ubuntu-latest
  #   name: Linux General Tests (${{ matrix.python }})
  #   container:
  #     image: quay.io/sandorex/ebd-test-image:ci-testing
  #     volumes:
  #       - ${{ github.github_workspace }}:/project
  #     options: --user user
  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       python: [ 'py36', 'py37', 'py38' ]
  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: Run the test
  #       run: tox -e ${{ matrix.python }} -- -m 'not browser'

  # formatting:
  #   runs-on: ubuntu-latest
  #   name: Formatting Checks
  #   container:
  #     image: quay.io/sandorex/ebd-test-image:ci-testing
  #     volumes:
  #       - ${{ github.github_workspace }}:/project
  #     options: --user user
  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: Run the test
  #       run: tox -e format

  # mypy:
  #   runs-on: ubuntu-latest
  #   name: Type Checks
  #   container:
  #     image: quay.io/sandorex/ebd-test-image:ci-testing
  #     volumes:
  #       - ${{ github.github_workspace }}:/project
  #     options: --user user
  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: Run the test
  #       run: tox -e mypy
